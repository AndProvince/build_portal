DROP TABLE IF EXISTS unit;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS works;

CREATE TABLE unit (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    about TEXT
);

CREATE TABLE type_houses (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    about TEXT
);

CREATE TABLE type_parameters (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    color TEXT NOT NULL,
    about TEXT
);

CREATE TABLE type_rooms (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    about TEXT
);

CREATE TABLE type_tools (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    parent_id INTEGER,
    FOREIGN KEY (parent_id) REFERENCES type_tools (id) ON DELETE RESTRICT,
    about TEXT
);

CREATE TABLE type_special_equipments (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL
);

CREATE TABLE special_equipments_unit (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    sq_id INTEGER NOT NULL,
    unit_id INTEGER NOT NULL,
    FOREIGN KEY (sq_id) REFERENCES type_special_equipments (id),
    FOREIGN KEY (unit_id) REFERENCES unit (id)
);

CREATE TABLE group_parameters (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    parent_id INTEGER,
    FOREIGN KEY (parent_id) REFERENCES group_parameters (id) ON DELETE RESTRICT,
    about TEXT
);

CREATE TABLE group_works (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    parent_id INTEGER,
    FOREIGN KEY (parent_id) REFERENCES group_works (id) ON DELETE RESTRICT,
    color TEXT NOT NULL,
    about TEXT
);

CREATE TABLE group_materials (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    parent_id INTEGER,
    FOREIGN KEY (parent_id) REFERENCES group_materials (id) ON DELETE RESTRICT,
    color TEXT NOT NULL,
    about TEXT
);

CREATE TABLE group_sq (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    parent_id INTEGER
    FOREIGN KEY (parent_id) REFERENCES group_sq (id) ON DELETE RESTRICT,
    about TEXT
);

CREATE TABLE rooms (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    type_id INTEGER NOT NULL,
    FOREIGN KEY (type_id) REFERENCES type_rooms (id) ON DELETE RESTRICT,
    about TEXT
);

CREATE TABLE multiplicity (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    condition TEXT NOT NULL
);

CREATE TABLE cities (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    region TEXT
);

CREATE TABLE estimate_names (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    name TEXT NOT NULL,
    parent_id INTEGER,
    FOREIGN KEY (parent_id) REFERENCES estimate_names (id) ON DELETE RESTRICT,
    h_level INTEGER,
    about TEXT
);

CREATE TABLE items (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    code TEXT NOT NULL,
    name TEXT NOT NULL,
    price NUMERIC NOT NULL,
    unit_id NUMERIC,
    FOREIGN KEY (unit_id) REFERENCES unit (id) ON DELETE RESTRICT
);

CREATE TABLE works (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    code TEXT NOT NULL,
    name TEXT NOT NULL,
    price NUMERIC NOT NULL,
    unit_id NUMERIC,
    FOREIGN KEY (unit_id) REFERENCES unit (id) ON DELETE RESTRICT
);